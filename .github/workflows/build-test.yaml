# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Test and Publish Container Image

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    # Configure your build (see README for more information)
    env:
      APP_NAME: kafka-synth-client
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Run Unit Tests
        run: mvn clean test
      - name: Build Container Image
        run: mvn package -Dquarkus.jib.base-jvm-image=eclipse-temurin:21-jre-jammy -Dquarkus.container-image.name=$APP_NAME -Dquarkus.container-image.push=false -Dquarkus.container-image.build=true -Dquarkus.container-image.tag=${{ github.sha }} -Dquarkus.container-image.group=ghcr.io/${{ github.repository_owner }}
      - name: Push Image
        run: |
          # Log in to registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker images
          
          IMAGE_NAME=${{ github.repository_owner }}/$APP_NAME
          IMAGE_ID=ghcr.io/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=${{ github.sha }}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker push $IMAGE_ID:$VERSION